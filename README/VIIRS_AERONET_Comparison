# AERONET and VIIRS Data Collocation and Comparison

## Table of Contents

- [Overview](#overview)
- [Getting Started](#getting-started)
  - [Prerequisites](#prerequisites)
  - [Installation](#installation)
- [Usage](#usage)
  - [Example 1](#example-1)
  - [Example 2](#example-2)
- [Contributing](#contributing)

## Overview
This repository contains a Google Colab notebook designed to compare, collocate, and validate AERONET aerosol optical depth (AOD) data with 
the VIIRS satellite data at the 550 nm channel. The code performs the following tasks:

1. Mounts Google Drive: To save and access files.
2. Installs Required Libraries: Ensures all necessary Python packages are available.
3. Defines Helper Functions: Includes functions for spatial averaging and statistical comparison.
4. Downloads and Processes VIIRS Data: Retrieves and processes VIIRS aerosol data.
5. Downloads and Processes AERONET Data: Retrieves and processes AERONET aerosol data.
6. Performs Data Collocation: Matches AERONET and VIIRS data based on location and time.
7. Saves Collocated Data: Outputs the collocated data and plot for further analysis.

## Getting Started

### Prerequisites
Running this code is more involved, as it requires Earthdata credentials and ability to use the NASA LAADS
archive to query clouds and aerosols data. After registering at https://urs.earthdata.nasa.gov, the user will need
to generate a token, which serves as authorization to download and access the data. The token is unique for 
each user, and expires after 60 days. Once logged in Earthdata, the token can be generated by clicking the
"Generate Token" menu option on the top bar, and then clicking the green generation button on the bottom of the page.
The displayed token will then need to be copied and pasted onto the authorization line (auth) in cell 6 of the code
after the "Bearer" attribute. Example: auth = {"Authorization": "Bearer token_goes_here"}

After token generation, the user will need to make sure that the LAADS applications are in the list of authorized apps.
That can be done by selecting Applications on the button bar on top of the page, then selecting Authorized Apps. Selecting
Approve More Applications on the bottom of the page will bring up a menu of applications. Searching "laads" will make the
two applications that are necessary for downloading LAADS data onto the colab notebook: LAADS Web and LAADS DAAC. The
applications will be in the user's approved list once the "Authorize" button is selected for each.

The final process involves downloading the LAADS query file from https://ladsweb.modaps.eosdis.nasa.gov/search/.
The product that the VIIRS-AERONET Comparison code makes use of is "AERDT_L2_VIIRS_SNPP". The time frame and coordinates
should also be specified by the user on that web. Finally, the list of applicable .NC files will be displayed, which the user
should download as a .csv and upload to their Colab environment. That file contains the URLs for each of the .NC files and 
will be useful to download and process the data directly from the acrhive, without having to manually download them individually.

After successfully accomplishing all these steps, the user can run the script which will produce results tailored to their product,
coordinates, and time of interest. Note that cell 7 of the script requires coordinates input to access the AERONET data, and it is
the user's responsibility to make sure those coordinates match the ones from LAADS. For ease of use, we have generated our own token 
and query file, which will be valid until September 29th, 2024. Until then, the script will run without the need of going through 
the process described above.

### Installation

There is a list of libraries that need to be installed before running the code. The netCDF4 library allows reading and writing of netCDF files, provides
support for multidimensional arrays (e.g., xarray) and handling of large datasets. All other libraries used are already installed on Google Colab/Anaconda 
by default. Note that the exclamation point is not required when installing through Anaconda command prompt.

!pip install netCDF4
!pip install xarray

In addition to the packages discussed above, the code also makes use of other libraries such as numpy for array manipulation, math for advanced mathematical 
functions, scikit-learn for regression and statistical calculations, and matplotlib for plotting.

## Usage

Below are the two cells which require action from the user. The first cell prompts user to allow Google to mount their local
drive onto the colab notebook. The user will need to allow access from the popup window that shows after running that cell. 

### Example 1

from google.colab import drive
drive.mount('/content/drive', force_remount=True)

Cells 5, 6, and 7 all require some input from the user. This input includes the path to the directory where the LAADS query
file is stored (Cell 5), the unique user token (Cell 6), and the AERONET data input for level data, min-max AOD, and coordinates
(Cell 7). Note that the query file can either be read from user's GitHub repository using the requests library, or can be read 
directly by uploading the file on Colab.

### Example 2

Cell 5: url = "https://raw.githubusercontent.com/pawanpgupta/AERONET/Python/DATA/LAADS_query.2024-08-01T14_22.csv"
Cell 6: auth = {"Authorization": "Bearer uniqueTokenGoesHere"}
Cell 7: level = 15
        AOD_min=0.0
        AOD_max=1.0
        long_west,long_east,lat_south,lat_north = 65., 130., -10., 35.


## Contributing
The code is for demonstration purposes only. Users are responsible to check for accuracy and revise to fit their objective.
Report any concern or question related to the code to pawan.gupta@nasa.gov or petar.grigorov@nasa.gov
